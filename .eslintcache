[{"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\index.js":"1","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\App.js":"2","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\SideBar\\SideBar.jsx":"3","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Body\\Body.jsx":"4","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Main\\Main.jsx":"5","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Footer\\Footer.jsx":"6","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\NavBar\\NavBar.jsx":"7","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Context\\Components.jsx":"8","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Genres\\GenresItem.jsx":"9","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Genres\\GenresService.js":"10","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Country\\CountryItem.jsx":"11","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Country\\CountryService.js":"12","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Users\\UserList.jsx":"13","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Users\\UserService.js":"14","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Users\\UserItem.jsx":"15","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Role\\RoleItem.jsx":"16","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\lib\\Alert.jsx":"17","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Role\\RoleService.js":"18","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Login\\LoginForm.jsx":"19","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Login\\LoginService.js":"20","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Plan\\PlanService.js":"21","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Plan\\PlanItem.jsx.jsx":"22","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\SessionStorage\\Token.js":"23","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Video\\VideoList.jsx":"24","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Video\\VideoItem.jsx":"25","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Serie\\SerieList.jsx":"26","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Serie\\SerieService.js":"27","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Serie\\SerieItem.jsx":"28","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Serie\\SeasonItem.jsx":"29","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Serie\\ChapterItem.jsx":"30","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Video\\VideoService.js":"31"},{"size":1847,"mtime":1612170468500,"results":"32","hashOfConfig":"33"},{"size":2320,"mtime":1613283581269,"results":"34","hashOfConfig":"33"},{"size":4644,"mtime":1613527448396,"results":"35","hashOfConfig":"33"},{"size":830,"mtime":1612472593990,"results":"36","hashOfConfig":"33"},{"size":13821,"mtime":1613376821648,"results":"37","hashOfConfig":"33"},{"size":744,"mtime":1613718646156,"results":"38","hashOfConfig":"33"},{"size":1167,"mtime":1612379233106,"results":"39","hashOfConfig":"33"},{"size":243,"mtime":1611164131322,"results":"40","hashOfConfig":"33"},{"size":1056,"mtime":1611291762550,"results":"41","hashOfConfig":"33"},{"size":338,"mtime":1611210976182,"results":"42","hashOfConfig":"33"},{"size":938,"mtime":1611359077132,"results":"43","hashOfConfig":"33"},{"size":651,"mtime":1611356541754,"results":"44","hashOfConfig":"33"},{"size":26433,"mtime":1613237541746,"results":"45","hashOfConfig":"33"},{"size":916,"mtime":1612129264345,"results":"46","hashOfConfig":"33"},{"size":9503,"mtime":1613530250357,"results":"47","hashOfConfig":"33"},{"size":164,"mtime":1611944001021,"results":"48","hashOfConfig":"33"},{"size":718,"mtime":1611951550076,"results":"49","hashOfConfig":"33"},{"size":188,"mtime":1611982174113,"results":"50","hashOfConfig":"33"},{"size":3624,"mtime":1613527369532,"results":"51","hashOfConfig":"33"},{"size":658,"mtime":1612160654350,"results":"52","hashOfConfig":"33"},{"size":188,"mtime":1611982174116,"results":"53","hashOfConfig":"33"},{"size":164,"mtime":1611982174116,"results":"54","hashOfConfig":"33"},{"size":442,"mtime":1612167631433,"results":"55","hashOfConfig":"33"},{"size":35611,"mtime":1613335921299,"results":"56","hashOfConfig":"33"},{"size":6125,"mtime":1613113443809,"results":"57","hashOfConfig":"33"},{"size":61941,"mtime":1613339732105,"results":"58","hashOfConfig":"33"},{"size":2243,"mtime":1613284988883,"results":"59","hashOfConfig":"33"},{"size":6070,"mtime":1613331179176,"results":"60","hashOfConfig":"33"},{"size":5243,"mtime":1613329901077,"results":"61","hashOfConfig":"33"},{"size":5415,"mtime":1613338839591,"results":"62","hashOfConfig":"33"},{"size":1033,"mtime":1613284817128,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"17n53qo",{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"71"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"115"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\index.js",["144"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\nimport {\n  getToken,\n  deleteToken,\n  getUsername,\n  setToken,\n  getRefreshToken,\n} from \"./components/SessionStorage/Token\";\nimport { token } from \"./components/Login/LoginService\";\n\nconst API = process.env.REACT_APP_API || \"http://localhost:5000\";\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = getToken();\n    if (token) {\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    // config.headers['Content-Type'] = 'application/json';\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\n//Add a response interceptor\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async function (error) {\n    const originalRequest = error.config;\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === `${API}/v1/auth/token`\n    ) {\n      //deleteToken(\"token\");\n      //deleteToken(\"refreshToken\");\n      //deleteToken(\"username\");\n      return Promise.reject(error);\n    }\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      try {\n        const username = getUsername();\n        const refreshToken = getRefreshToken();\n        const resToken = await token(username, refreshToken);\n        if (resToken.status === 200) {\n          setToken(\"token\", resToken.data.token);\n          const token = getToken();\n          axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n          return axios(originalRequest);\n        }\n      } catch (e) {\n        //console.log(\"test\");\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n",["145","146"],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\App.js",["147","148"],"import React, { useState, useEffect } from \"react\";\nimport { Body } from \"./components/Body/Body\";\nimport { StatusProvider } from \"./components/Context/Components\";\nimport { LoginForm } from \"./components/Login/LoginForm\";\nimport { SideBar } from \"./components/SideBar/SideBar\";\nimport {\n  deleteToken,\n  getToken,\n  setToken,\n} from \"./components/SessionStorage/Token\";\nimport { getData } from \"./components/Users/UserService\";\n\nfunction App() {\n  const initalData = {\n    codigo: \"\",\n    habilitado: \"\",\n    ide: \"\",\n    acceso: \"\",\n    rol: \"\",\n    username: \"\",\n  };\n\n  const [video, setVideo] = useState(false);\n  const [usuario, setUsuario] = useState(false);\n  const [serie, setSerie] = useState(false);\n\n  const [data, setData] = useState(initalData);\n\n  const verifyLogin = async () => {\n    const res = await getData();\n    if (res.data.estado === 2) {\n      setData({ ...data, habilitado: 2, online: false });\n      deleteToken(\"token\");\n      deleteToken(\"refreshToken\");\n      deleteToken(\"username\");\n    }\n  };\n  const cargaUsuario = async () => {\n    try {\n      const res = await getData();\n      setData({\n        codigo: res.data.cod,\n        habilitado: res.data.estado === 1 ? \"si\" : \"no\",\n        ide: res.data.id,\n        acceso: res.data.nivel,\n        rol: res.data.rol,\n        username: res.data.username,\n      });\n      setToken(\"username\", res.data.username.toLowerCase());\n    } catch (e) {\n      //await disconnectDevice();\n      setData({ ...data });\n      deleteToken(\"token\");\n      deleteToken(\"refreshToken\");\n      deleteToken(\"username\");\n    }\n  };\n\n  useEffect(() => {\n    cargaUsuario();\n  }, []);\n\n  if (data.habilitado === \"no\") {\n    return <LoginForm />;\n  }\n\n  return (\n    <StatusProvider\n      value={{\n        data,\n        setData,\n        video,\n        setVideo,\n        usuario,\n        setUsuario,\n        serie,\n        setSerie,\n      }}\n    >\n      <section\n        //onbeforeunload={yamehapasao}\n        className=\"h-screen w-screen bg-gray-200 flex flex-col-reverse sm:flex-row min-h-0 min-w-0 overflow-hidden\"\n      >\n        {getToken() ? (\n          <>\n            <SideBar />\n            <Body />\n          </>\n        ) : (\n          <>\n            <LoginForm />\n          </>\n        )}\n      </section>\n    </StatusProvider>\n  );\n}\n\nexport default App;\n",["149","150"],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\SideBar\\SideBar.jsx",["151","152","153","154","155"],"import React, { useContext, useState } from \"react\";\r\nimport { StatusContext } from \"../Context/Components\";\r\nimport { FaUsers } from \"react-icons/fa\";\r\nimport { BiCameraMovie, BiMovie } from \"react-icons/bi\";\r\nimport { CgLogOut } from \"react-icons/cg\";\r\nimport { deleteToken } from \"../SessionStorage/Token\";\r\nimport { disconnectDevice } from \"../Login/LoginService\";\r\nimport { LoginForm } from \"../Login/LoginForm\";\r\n\r\nexport const SideBar = () => {\r\n  const { setUsuario, setVideo, setSerie } = useContext(StatusContext);\r\n  const { data } = useContext(StatusContext);\r\n  const [close, setClose] = useState(false);\r\n\r\n  const logout = async () => {\r\n    await disconnectDevice();\r\n    deleteToken(\"token\");\r\n    deleteToken(\"refreshToken\");\r\n    deleteToken(\"username\");\r\n    setClose(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {close ? (\r\n        <>\r\n          <LoginForm />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <aside className=\"sm:h-full sm:w-16 w-full h-12 bg-gray-800 text-gray-200\">\r\n            <ul className=\"text-center flex flex-row sm:flex-col w-full\">\r\n              <li className=\"h-14 border-b border-gray-900 hidden sm:block\">\r\n                <a\r\n                  onClick={() => {\r\n                    setVideo(false);\r\n                    setSerie(false);\r\n                    setUsuario(false);\r\n                  }}\r\n                  id=\"page-icon\"\r\n                  className=\"h-full w-full hover:bg-gray-700 block p-3\"\r\n                >\r\n                  <img\r\n                    className=\"sm:h-auto\"\r\n                    style={{ resize: \"contain\", height: 30, width: 50 }}\r\n                    src=\"https://images-ethantv.s3-sa-east-1.amazonaws.com/logo/LogoETV.png\"\r\n                    alt=\"ethantv\"\r\n                  />\r\n                </a>\r\n              </li>\r\n              <li className=\"h-14 border-b border-gray-900 hidden sm:block\">\r\n                <a\r\n                  id=\"page-icon\"\r\n                  onClick={() => {\r\n                    setVideo(false);\r\n                    setSerie(false);\r\n                    setUsuario(true);\r\n                  }}\r\n                  className=\"h-full w-full hover:bg-gray-700 block p-3\"\r\n                >\r\n                  <FaUsers\r\n                    style={{ fontSize: \"30px\", display: \"inlineBlock\" }}\r\n                  />\r\n                </a>\r\n              </li>\r\n              {data.acceso === 3 || data.acceso === 4 ? (\r\n                <>\r\n                  <li\r\n                    className=\"sm:border-b border-gray-900 flex-1 sm:w-full\"\r\n                    title=\"Peliculas y canales\"\r\n                  >\r\n                    <a\r\n                      id=\"page-icon\"\r\n                      onClick={() => {\r\n                        setUsuario(false);\r\n                        setSerie(false);\r\n                        setVideo(true);\r\n                      }}\r\n                      className=\"h-full w-full hover:bg-gray-700 block p-3\"\r\n                    >\r\n                      <BiCameraMovie\r\n                        style={{ fontSize: \"30px\", display: \"inlineBlock\" }}\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                  <li\r\n                    className=\"sm:border-b border-gray-900 flex-1 sm:w-full\"\r\n                    title=\"Series\"\r\n                  >\r\n                    <a\r\n                      id=\"page-icon\"\r\n                      onClick={() => {\r\n                        setUsuario(false);\r\n                        setVideo(false);\r\n                        setSerie(true);\r\n                      }}\r\n                      className=\"h-full w-full hover:bg-gray-700 block p-3\"\r\n                    >\r\n                      <BiMovie\r\n                        style={{ fontSize: \"30px\", display: \"inlineBlock\" }}\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                </>\r\n              ) : (\r\n                <></>\r\n              )}\r\n\r\n              <li\r\n                style={{ width: \"64px\" }}\r\n                className=\"sm:border-b border-gray-900 flex-1 absolute bottom-0\"\r\n                title=\"Cerrar sesión\"\r\n              >\r\n                <a\r\n                  id=\"page-icon\"\r\n                  onClick={() => {\r\n                    logout();\r\n                  }}\r\n                  className=\"h-full w-full hover:bg-gray-700 block p-3\"\r\n                >\r\n                  <CgLogOut\r\n                    style={{ fontSize: \"30px\", display: \"inlineBlock\" }}\r\n                  />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </aside>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Body\\Body.jsx",["156","157","158"],"import React, { useEffect } from \"react\";\r\nimport { Footer } from \"../Footer/Footer\";\r\nimport { LoginForm } from \"../Login/LoginForm\";\r\nimport { Main } from \"../Main/Main\";\r\nimport { NavBar } from \"../NavBar/NavBar\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\nimport { disconnectDevice } from \"../Login/LoginService\";\r\nimport { Beforeunload } from \"react-beforeunload\";\r\n\r\nexport const Body = () => {\r\n  const logout = async () => {\r\n    //event.preventDefault();\r\n    await disconnectDevice();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main className=\"sm:h-full flex-1 flex flex-col min-h-0 min-w-0 overflow-auto\">\r\n        <>\r\n          <Beforeunload onBeforeunload={logout}>\r\n            <NavBar />\r\n            <Main />\r\n            <Footer />\r\n          </Beforeunload>\r\n        </>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n",["159","160"],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Main\\Main.jsx",["161"],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Footer\\Footer.jsx",["162"],"import React from \"react\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"px-6 py-3 border-t flex w-full items-end\">\r\n        <p className=\"text-gray-600\">\r\n          developed by{\" \"}\r\n          <a href=\"https://quedape.com\" target=\"_blank\">\r\n            @quedape\r\n          </a>\r\n        </p>\r\n        {/**\r\n           * <div className=\"flex-1\" />\r\n        <button className=\"shadow-md ml-auto border rounded-full ml-2 w-14 h-14 text-center leading-none text-green-200 bg-green-600 hover:bg-green-500 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent\">\r\n          <i className=\"fas fa-question fill-current\" />\r\n        </button>\r\n           */}\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\NavBar\\NavBar.jsx",["163"],"import React, { useContext } from \"react\";\r\nimport { StatusContext } from \"../Context/Components\";\r\nexport const NavBar = () => {\r\n  const { data } = useContext(StatusContext);\r\n  return (\r\n    <>\r\n      <nav className=\"border-b bg-white px-6 py-2 flex items-center min-w-0 h-14\">\r\n        {/**<h1 className=\"font-semibold text-lg\" />\r\n        <span className=\"flex-1\" />\r\n        <span className=\"mr-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            className=\"w-full border-2 px-2 py-1 border border-gray-300 rounded-sm focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent bg-gray-300 focus:bg-gray-100\"\r\n          />\r\n        </span> */}\r\n        <h1 className=\"font-semibold text-lg\" />\r\n        <span className=\"flex-1\" />\r\n        <span className=\"mr-2\">Hola, {data.username}</span>\r\n\r\n        <button className=\"ml-auto border rounded-full ml-2 w-10 h-10 text-center leading-none text-gray-200 bg-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent\">\r\n          <i className=\"fas fa-user fill-current\" />\r\n        </button>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n",["164","165"],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Context\\Components.jsx",[],["166","167"],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Genres\\GenresItem.jsx",["168"],"import React, { useState } from \"react\";\r\n\r\nexport const GenresItem = ({ genre }) => {\r\n  const [isColor, setColor] = useState({\r\n    blue: true,\r\n  });\r\n\r\n  const className = isColor.blue\r\n    ? \"flex w-full items-center p-2 pl-2 border-transparent border-l-2 relative \"\r\n    : \"flex w-full items-center p-2 pl-2 border-transparent border-l-2 relative bg-blue-100 border-blue-600\";\r\n\r\n  const hanldeChangeColor = () => {\r\n    setColor({ blue: !isColor.blue });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <option\r\n        className=\"flex w-full items-center p-2 pl-2 border-transparent border-l-2 relative\"\r\n        onClick={hanldeChangeColor}\r\n        value={genre.name}\r\n      >\r\n        {genre.name}\r\n      </option>\r\n    </>\r\n  );\r\n};\r\n\r\n/**\r\n * <div className=\"flex flex-col w-full\">\r\n        <div className=\"cursor-pointer w-full border-gray-100 border-b hover:bg-blue-100\">\r\n          <div className={className} onClick={hanldeChangeColor}>\r\n            <option value={genre.name}>{genre.name}</option>\r\n          </div>\r\n        </div>\r\n      </div>\r\n */\r\n",["169","170"],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Genres\\GenresService.js",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Country\\CountryItem.jsx",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Country\\CountryService.js",["171"],"import axios from \"axios\";\r\n\r\nconst API = process.env.REACT_APP_API || \"http://localhost:5000\";\r\nconst API_COUNTRYS = process.env.REACT_API_COUNTRYS || \"http://localhost:3000\";\r\nconst API_COUNTRYS_IMG =\r\n  process.env.REACT_API_COUNTRYS_IMG || \"http://localhost:3000\";\r\n\r\n//Obtiene Pais\r\nexport const getCountry = async (id) => {\r\n  return await axios.get(`${API}/v1/country/${id}`);\r\n};\r\n\r\n//Lista Paises\r\nexport const getCountrys = async () => {\r\n  return await axios.get(`${API}/v1/countrys`);\r\n};\r\n\r\n//Lista Bandera Pais\r\nexport const getIMGCountrys = async (cod) => {\r\n  return await axios.get(`${API_COUNTRYS_IMG}/country/img/${cod}.svg`);\r\n};\r\n","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Users\\UserList.jsx",["172"],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Users\\UserService.js",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Users\\UserItem.jsx",["173","174"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { desaUser, actiUser } from \"./UserService\";\r\nimport * as userService from \"./UserService\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\"; // without this line it didn't work\r\nimport { StatusContext } from \"../Context/Components\";\r\nimport \"moment-duration-format\";\r\nmoment.locale(\"es\");\r\nexport const UserItem = ({\r\n  user,\r\n  users,\r\n  modal,\r\n  calcularCantidad,\r\n  getListUsers,\r\n}) => {\r\n  const { data } = useContext(StatusContext);\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const desactivate = async (id) => {\r\n    await desaUser(id);\r\n    users();\r\n    calcularCantidad();\r\n  };\r\n\r\n  const activate = async (id) => {\r\n    await actiUser(id);\r\n    users();\r\n    calcularCantidad();\r\n  };\r\n\r\n  const calculaDiferenciaDias = async () => {\r\n    if (user.terminaPlan) {\r\n      let ini = moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n      let fin = moment(user.terminaPlan).format(\"YYYY-MM-DD HH:mm:ss\");\r\n\r\n      if (moment(ini).isSameOrAfter(fin)) {\r\n        //await userService.desaUser(user._id);\r\n        //getListUsers();\r\n        //calcularCantidad();\r\n        setTime(\"Culminado\");\r\n        return;\r\n      }\r\n      let fecha1 = moment(ini);\r\n      let fecha2 = moment(fin);\r\n      let duration = moment.duration(fecha2.diff(fecha1));\r\n      setTime(duration.format(\"D[d], H[h] m[m] s[s]\"));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(calculaDiferenciaDias, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  //console.log();\r\n  return (\r\n    <>\r\n      <tr key={user._id}>\r\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"ml-3\">\r\n              <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                {user.username}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </td>\r\n\r\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n          <p className=\"text-gray-900 whitespace-no-wrap\">\r\n            {user.role.name} - {user.celular ? user.celular : \"Ninguno\"}\r\n          </p>\r\n        </td>\r\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n          <p className=\"text-gray-900 whitespace-no-wrap\">\r\n            {user.cantOrtorgada ? user.cantOrtorgada : \"Ninguno\"}\r\n          </p>\r\n        </td>\r\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n          <p className=\"text-gray-900 whitespace-no-wrap\">\r\n            {user.cantSobrante ? user.cantSobrante : \"Ninguno\"}\r\n          </p>\r\n        </td>\r\n        <td className=\"py-5 border-b border-gray-200 bg-white text-sm\">\r\n          <p className=\"text-gray-900 whitespace-no-wrap\">\r\n            {/**{moment(user.createdAt).format(\"LLLL\")} */}\r\n            {user.iniciaPlan\r\n              ? moment(user.iniciaPlan).format(\"DD-MM-YYYY HH:mm:ss\")\r\n              : \"Ninguno\"}\r\n          </p>\r\n        </td>\r\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n          <p className=\"text-gray-900 whitespace-no-wrap\">\r\n            {user.terminaPlan\r\n              ? moment(user.terminaPlan).format(\"DD-MM-YYYY HH:mm:ss\")\r\n              : \"Ninguno\"}\r\n          </p>\r\n        </td>\r\n        {data.acceso === 4 || data.acceso === 3 ? (\r\n          <>\r\n            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n              <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                {user.ide ? (\r\n                  data.username === user.ide.username ? (\r\n                    <span className=\"font-semibold text-blue-900\">YO</span>\r\n                  ) : (\r\n                    user.ide.username\r\n                  )\r\n                ) : (\r\n                  \"Ninguno\"\r\n                )}\r\n              </p>\r\n            </td>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n          <p className=\"text-gray-900 whitespace-no-wrap\">\r\n            {user.timeExpiration ? user.timeExpiration.name : \"Ninguno\"}\r\n          </p>\r\n        </td>\r\n\r\n        <td className=\"py-5 border-b border-gray-200 bg-white text-sm\">\r\n          <p className=\"text-gray-900 whitespace-no-wrap\">\r\n            {user.timeExpiration ? time : \"Ninguno\"}\r\n          </p>\r\n        </td>\r\n        {/*{user.contAccess} */}\r\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n          <div>\r\n            {user.contAccess === 0 ? (\r\n              \"No conectado\"\r\n            ) : user.contAccess === 1 ? (\r\n              <div className=\"w-4 h-4 bg-green-600 rounded-2xl float-left\" />\r\n            ) : user.contAccess === 2 ? (\r\n              <>\r\n                <div className=\"w-4 h-4 bg-green-600 rounded-2xl float-left\" />\r\n                <div className=\"w-4 h-4 bg-green-600 rounded-2xl float-left ml-2\" />\r\n              </>\r\n            ) : user.contAccess === 3 ? (\r\n              <>\r\n                <div className=\"w-4 h-4 bg-green-600 rounded-2xl float-left\" />\r\n                <div className=\"w-4 h-4 bg-green-600 rounded-2xl float-left ml-2\" />\r\n                <div className=\"w-4 h-4 bg-green-600 rounded-2xl float-left ml-2\" />\r\n              </>\r\n            ) : (\r\n              \"Ninguno\"\r\n            )}\r\n          </div>\r\n        </td>\r\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n          <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\r\n            {user.state === 1 ? (\r\n              <>\r\n                <span\r\n                  aria-hidden\r\n                  className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\"\r\n                />\r\n                <span className=\"relative\">Activo</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span\r\n                  aria-hidden\r\n                  className=\"absolute inset-0 bg-red-200 opacity-50 rounded-full\"\r\n                />\r\n                <span className=\"relative\">Inactivo</span>\r\n              </>\r\n            )}\r\n          </span>\r\n        </td>\r\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n          {data.acceso === 4 && user.role.name === \"Owner\" ? (\r\n            <></>\r\n          ) : (\r\n            <>\r\n              {user.state === 1 ? (\r\n                <>\r\n                  <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\r\n                    <span\r\n                      className=\"relative cursor-pointer\"\r\n                      onClick={() => {\r\n                        desactivate(user._id);\r\n                      }}\r\n                    >\r\n                      <svg\r\n                        className=\"w-6 h-6 mr-3\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M5 13l4 4L19 7\"\r\n                        />\r\n                      </svg>\r\n                    </span>\r\n                  </span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <span className=\"relative inline-block px-3 py-1 font-semibold text-red-900 leading-tight\">\r\n                    <span\r\n                      className=\"relative cursor-pointer\"\r\n                      onClick={() => {\r\n                        activate(user._id);\r\n                      }}\r\n                    >\r\n                      <svg\r\n                        className=\"w-6 h-6 mr-3\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M6 18L18 6M6 6l12 12\"\r\n                        />\r\n                      </svg>\r\n                    </span>\r\n                  </span>\r\n                </>\r\n              )}{\" \"}\r\n              <span className=\"relative inline-block px-3 py-1 font-semibold text-yellow-900 leading-tight\">\r\n                <span\r\n                  className=\"relative cursor-pointer\"\r\n                  onClick={() => {\r\n                    modal(user._id);\r\n                  }}\r\n                >\r\n                  <svg\r\n                    className=\"w-6 h-6 mr-3\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\r\n                    />\r\n                  </svg>\r\n                </span>\r\n              </span>\r\n            </>\r\n          )}{\" \"}\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Role\\RoleItem.jsx",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\lib\\Alert.jsx",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Role\\RoleService.js",[],["175","176"],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Login\\LoginForm.jsx",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Login\\LoginService.js",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Plan\\PlanService.js",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Plan\\PlanItem.jsx.jsx",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\SessionStorage\\Token.js",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Video\\VideoList.jsx",["177","178","179","180","181","182","183","184","185","186"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { VideoItem } from \"./VideoItem\";\r\nimport {\r\n  getURLPeli,\r\n  getAllVideos,\r\n  getVideo,\r\n  newVideo,\r\n  updateVideo,\r\n  newSeason,\r\n  newChapter,\r\n  updateSeason,\r\n  updateChapter,\r\n} from \"./VideoService\";\r\n\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\n\r\nimport { GenresItem } from \"../Genres/GenresItem\";\r\nimport { getGenres } from \"../Genres/GenresService\";\r\nimport { getCountrys } from \"../Country/CountryService\";\r\nimport { CountryItem } from \"../Country/CountryItem\";\r\nimport { AlertError, AlertSuccess } from \"../lib/Alert\";\r\nimport { StatusContext } from \"../Context/Components\";\r\n\r\n//import Autocomplete from \"react-autocomplete\"\r\n/*\r\n * top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\", \r\n */\r\nconst customStyles = {\r\n  content: {\r\n    height: \"628px\",\r\n    top: \"2%\",\r\n    left: \"20%\",\r\n    right: \"20%\",\r\n    bottom: \"auto\",\r\n  },\r\n};\r\n\r\n//Modal.AppElement(\"body\");\r\n\r\nexport const VideoList = ({ calcularCantidad }) => {\r\n  const initialValue = {\r\n    url: \"\",\r\n    title: \"\",\r\n    image: \"\",\r\n    description: \"\",\r\n    duration: \"\",\r\n    year: \"\",\r\n    genres: [],\r\n    country: \"Afganistán\",\r\n    typeVideo: \"Pelicula\",\r\n    web: \"www13.pelisplus.movie\",\r\n    server: \"Peliscloud\",\r\n  };\r\n\r\n  const initialValueMessage = {\r\n    error: false,\r\n    success: false,\r\n    title: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  const [message, setMessage] = useState(initialValueMessage);\r\n  const [video, setVideo] = useState(initialValue);\r\n  const [URL, setURL] = useState(false);\r\n  const [videos, setVideos] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [countrys, setCountrys] = useState([]);\r\n  const [loading, setLoading] = useState(\"Completar URL\");\r\n  const [isEncontrado, setEncontrado] = useState(false);\r\n  const [Obtienegenre, setObtieneGenre] = useState([]);\r\n  const [totalVideos, setTotalVideos] = useState(0);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [isVisible, setVisible] = useState({\r\n    active: false,\r\n  });\r\n\r\n  const onKeyUpValuePeliiculas = async (e) => {\r\n    const { value } = e.target;\r\n    const res = await getAllVideos();\r\n    //console.log(res.data[0].role.name);\r\n    const buscarUsuarios = res.data.filter(\r\n      (video) =>\r\n        String(video.country.name).toLowerCase().indexOf(value) >= 0 ||\r\n        String(video.country.name).toUpperCase().indexOf(value) >= 0 ||\r\n        String(video.state).toLowerCase().indexOf(value) >= 0 ||\r\n        String(video.state).toUpperCase().indexOf(value) >= 0 ||\r\n        String(video.title).toLowerCase().indexOf(value) >= 0 ||\r\n        String(video.title).toUpperCase().indexOf(value) >= 0 ||\r\n        String(video.year).toLowerCase().indexOf(value) >= 0 ||\r\n        String(video.year).toUpperCase().indexOf(value) >= 0 ||\r\n        String(video.genres.map((pengre) => pengre.name))\r\n          .toLowerCase()\r\n          .indexOf(value) >= 0 ||\r\n        String(video.genres.map((pengre) => pengre.name))\r\n          .toUpperCase()\r\n          .indexOf(value) >= 0\r\n    );\r\n    const cantidadUsuarios = buscarUsuarios.length;\r\n    setTotalVideos(cantidadUsuarios);\r\n    if (cantidadUsuarios.length === 0) {\r\n      console.log(\"Buscando alumnos...\");\r\n    } else {\r\n      setVideos(buscarUsuarios);\r\n    }\r\n  };\r\n\r\n  const classNameVisible = isVisible.active\r\n    ? \"w-full overflow-hidden focus:outline-none\"\r\n    : \"hidden\";\r\n\r\n  const handleVisible = () => {\r\n    setVisible({ active: !isVisible.active });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setVideo({ ...video, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    setVideo({ ...video, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleGenres = async (e) => {\r\n    if (Obtienegenre.length === 0) {\r\n      Obtienegenre.push(e.target.value);\r\n    } else {\r\n      const encontrado = Obtienegenre.filter(\r\n        (genre) => genre === e.target.value\r\n      );\r\n      if (encontrado.length !== 0) {\r\n        let position = Obtienegenre.indexOf(encontrado);\r\n        Obtienegenre.splice(position, 1);\r\n      } else {\r\n        Obtienegenre.push(e.target.value);\r\n      }\r\n    }\r\n    setVideo({ ...video, genres: Obtienegenre });\r\n  };\r\n\r\n  const onKeyUpValue = async (e) => {\r\n    const { value } = e.target;\r\n    if (value.length <= 0) {\r\n      setLoading(\"\");\r\n      setEncontrado(false);\r\n    }\r\n    //if (video.url === \"\") {\r\n    //e.target.value = \"\";\r\n    //} else {\r\n    if (video.server === \"Peliscloud\") {\r\n      setLoading(\"Cargando...\");\r\n      try {\r\n        const peli = await getURLPeli(value);\r\n\r\n        if (peli.statusText === \"OK\") {\r\n          setEncontrado(false);\r\n          return setLoading(\"URL invalido\");\r\n        }\r\n\r\n        setLoading(\"Espere...\");\r\n        let domain = value.substr(0, 31);\r\n        let subdomain = peli.data.substr(-77, 76);\r\n        setLoading(domain.trim() + subdomain.trim());\r\n        setEncontrado(true);\r\n      } catch (e) {\r\n        setEncontrado(false);\r\n        setLoading(\"URL invalido\");\r\n      }\r\n      //}\r\n    }\r\n  };\r\n\r\n  const onKeyFiltroGenres = async (e) => {\r\n    const { value } = e.target;\r\n    if (value.length < 0 || value.length === 0) {\r\n      setVisible({ active: false });\r\n    } else {\r\n      setVisible({ active: true });\r\n      const res = await getGenres();\r\n      const buscarGenres = res.data.filter(\r\n        (genre) =>\r\n          genre.name.toLowerCase().indexOf(value) >= 0 ||\r\n          genre.name.toUpperCase().indexOf(value) >= 0\r\n      );\r\n      setGenres(buscarGenres);\r\n    }\r\n  };\r\n\r\n  const getListVideos = async () => {\r\n    const res = await getAllVideos();\r\n    setTotalVideos(res.data.length);\r\n    setVideos(res.data);\r\n  };\r\n\r\n  const getListGenres = async () => {\r\n    const res = await getGenres();\r\n    setGenres(res.data);\r\n  };\r\n\r\n  const getListCountrys = async () => {\r\n    const res = await getCountrys();\r\n    setCountrys(\r\n      res.data.sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0))\r\n    );\r\n  };\r\n\r\n  const getVideoId = async (id) => {\r\n    const res = await getVideo(id);\r\n    setVideo({\r\n      ...res.data,\r\n      country: res.data.country ? res.data.country.name : \"Afganistán\",\r\n      genres: res.data.genres.map((genre) => genre.name),\r\n    });\r\n  };\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function opeMondalId(id) {\r\n    getVideoId(id);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setVideo(initialValue);\r\n    setMessage(initialValueMessage);\r\n    setLoading(\"Completar URL\");\r\n    setIsOpen(false);\r\n    setEncontrado(false);\r\n    setVisible({ active: false });\r\n    setObtieneGenre([]);\r\n  }\r\n\r\n  const eliminaGenre = async (mvgen) => {\r\n    let totalGenre = await Obtienegenre.indexOf(mvgen);\r\n    await Obtienegenre.splice(totalGenre, 1);\r\n    const sobrante = Obtienegenre.map((name) => name);\r\n    if (video._id) setVideo({ ...video, genres: sobrante });\r\n    else setObtieneGenre(sobrante);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (video._id) {\r\n      try {\r\n        await updateVideo(video._id, video);\r\n      } catch (e) {\r\n        if (e.request.status === 401) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: \"Recargue la página\",\r\n          });\r\n          return;\r\n        }\r\n      }\r\n    } else {\r\n      try {\r\n        await newVideo(video);\r\n        setVideo(initialValue);\r\n        setMessage(initialValueMessage);\r\n        calcularCantidad();\r\n        setGenres([]);\r\n        setCountrys([]);\r\n        setEncontrado(false);\r\n        setObtieneGenre([]);\r\n        setLoading(\"Completar URL\");\r\n      } catch (e) {\r\n        const error = JSON.parse(e.request.response) || null;\r\n        console.log(error);\r\n        if (e.request.status === 401) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: \"Recargue la página\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        if (error.errors) {\r\n          if (error.errors.url) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"Completar URL\",\r\n            });\r\n            return;\r\n          }\r\n\r\n          if (error.errors.image) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"Completar URL portada\",\r\n            });\r\n            return;\r\n          }\r\n          if (error.errors.title) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"Completar título del video\",\r\n            });\r\n            return;\r\n          }\r\n        }\r\n        if (error.keyValue) {\r\n          if (error.keyValue.image) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"URL de la portada ya existe\",\r\n            });\r\n            return;\r\n          }\r\n        }\r\n        if (error) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: \"URL Generado ya existe\",\r\n          });\r\n          setEncontrado(false);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListVideos();\r\n    getListGenres();\r\n    getListCountrys();\r\n    if (loading !== \"Completar URL\") setVideo({ ...video, url: loading });\r\n    if (video._id) setObtieneGenre(video.genres.map((genre) => genre));\r\n  }, [loading, video._id]);\r\n\r\n  const MostrarGenre = ({ mvgen }) => {\r\n    return (\r\n      <>\r\n        <div className=\"flex justify-center items-center m-1 font-medium py-1 px-2 bg-white rounded-full text-teal-700 bg-blue-100 border border-blue-300 \">\r\n          <div className=\"text-xs font-normal leading-none max-w-full flex-initial\">\r\n            {Obtienegenre.length === 0 ? setObtieneGenre([]) : mvgen}\r\n          </div>\r\n          <div className=\"flex flex-auto flex-row-reverse\">\r\n            <div>\r\n              <svg\r\n                onClick={() => eliminaGenre(mvgen)}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth={2}\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                className=\"feather feather-x cursor-pointer hover:text-teal-400 rounded-full w-4 h-4 ml-2\"\r\n              >\r\n                <line x1={18} y1={6} x2={6} y2={18} />\r\n                <line x1={6} y1={6} x2={18} y2={18} />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-4 sm:px-8\">\r\n      <div className=\"py-8\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-semibold leading-tight\">Videos</h2>\r\n        </div>\r\n        <div>\r\n          Busca videos por país, título, año, estado(1:activo, 2:inactivo) o\r\n          género\r\n        </div>\r\n        <div className=\"my-2 sm:flex-row flex flex-row\">\r\n          <div className=\"relative\">\r\n            <span className=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\r\n              <svg\r\n                viewBox=\"0 0 24 24\"\r\n                className=\"h-4 w-4 fill-current text-gray-500\"\r\n              >\r\n                <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\r\n              </svg>\r\n            </span>\r\n            <input\r\n              onKeyUp={onKeyUpValuePeliiculas}\r\n              placeholder=\"Buscar\"\r\n              className=\"appearance-none rounded-r rounded-l sm:rounded-l-none border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <span>{totalVideos} Videos</span>\r\n        <div className=\"flex flex-row-reverse\">\r\n          <button\r\n            onClick={openModal}\r\n            type=\"button\"\r\n            className=\"border border-indigo-500 bg-indigo-500 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-indigo-600 focus:outline-none focus:shadow-outline\"\r\n          >\r\n            Registrar\r\n          </button>\r\n          <Modal\r\n            isOpen={modalIsOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            contentLabel=\"Pelicula\"\r\n            shouldCloseOnOverlayClick={false}\r\n          >\r\n            {video._id ? (\r\n              <>\r\n                <div className=\"flex items-center space-x-5\">\r\n                  <div className=\"h-14 w-14 bg-yellow-200 rounded-full flex flex-shrink-0 justify-center items-center text-yellow-500 text-2xl font-mono\">\r\n                    i\r\n                  </div>\r\n                  <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                    <h2 className=\"leading-relaxed\">Actualizar video</h2>\r\n                    <p className=\"text-sm text-gray-500 font-normal leading-relaxed\">\r\n                      Actualizar video.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"flex items-center space-x-5\">\r\n                  <div className=\"h-14 w-14 bg-green-200 rounded-full flex flex-shrink-0 justify-center items-center text-green-500 text-2xl font-mono\">\r\n                    <svg\r\n                      className=\"w-6 h-6 \"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M12 4v16m8-8H4\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                    <h2 className=\"leading-relaxed\">Registrar video</h2>\r\n                    <p className=\"text-sm text-gray-500 font-normal leading-relaxed\">\r\n                      Registrar video.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n            <br />\r\n            {message.error ? <AlertError message={message} /> : \"\"}\r\n            {message.success ? <AlertSuccess message={message} /> : \"\"}\r\n\r\n            <div className=\"divide-y divide-gray-200\">\r\n              <div className=\"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"-mx-3 flex mb-6\">\r\n                    <div className=\"md:w-1/2 px-3 mb-6 md:mb-0\">\r\n                      <label className=\"leading-loose\">Grupo</label>\r\n                      <div className=\"p-1 bg-white flex border border-gray-300 rounded\">\r\n                        <select\r\n                          className=\"w-full outline-none\"\r\n                          name=\"typeVideo\"\r\n                          value={video.typeVideo}\r\n                          onChange={handleSelectChange}\r\n                        >\r\n                          <option value={\"Pelicula\"}>Pelicula</option>\r\n                          <option value={\"Canal\"}>Canal</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"md:w-1/2 px-3\">\r\n                      <label className=\"leading-loose\">Web</label>\r\n                      <div className=\"p-1 bg-white flex border border-gray-300 rounded\">\r\n                        <select\r\n                          className=\"w-full outline-none\"\r\n                          name=\"web\"\r\n                          value={video.web}\r\n                          onChange={handleSelectChange}\r\n                        >\r\n                          <option value={\"www13.pelisplus.movie\"}>\r\n                            www13.pelisplus.movie\r\n                          </option>\r\n                          <option value={\"www.pelisplus.com\"}>\r\n                            www.pelisplus.com\r\n                          </option>\r\n                          <option value={\"www.pelisuplus.ne\"}>\r\n                            www.pelisuplus.ne\r\n                          </option>\r\n                          <option value={\"www.pelisuplus.ne\"}>Otro</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"md:w-1/2 px-3\">\r\n                      <label className=\"leading-loose\">Servidor</label>\r\n                      <div className=\"p-1 bg-white flex border border-gray-300 rounded\">\r\n                        <select\r\n                          className=\"w-full outline-none\"\r\n                          name=\"server\"\r\n                          value={video.server}\r\n                          onChange={handleSelectChange}\r\n                        >\r\n                          <option value={\"Peliscloud\"}>Peliscloud</option>\r\n                          <option value={\"Upload\"}>Upload</option>\r\n                          <option value={\"Servidor\"}>Servidor</option>\r\n                          <option value={\"Otro\"}>Otro</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex flex-col\">\r\n                    <label className=\"leading-loose\">\r\n                      URL - {video.web} - {video.server}\r\n                    </label>\r\n                    <input\r\n                      type=\"url\"\r\n                      disabled={isEncontrado}\r\n                      onKeyUp={onKeyUpValue}\r\n                      className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                      placeholder=\"https://stream01.peliscloud.net/playlist/d504281aba0f7f8d8acedda2f3997def/1611102539492\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col\">\r\n                    <label className=\"leading-loose\">URL Generado</label>\r\n                    <input\r\n                      onChange={handleInputChange}\r\n                      type=\"text\"\r\n                      name=\"url\"\r\n                      className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                      value={video._id ? video.url : loading}\r\n                      disabled={true}\r\n                      // eslint-disable-next-line react/jsx-no-duplicate-props\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col\">\r\n                    <label className=\"leading-loose\">URL Portada</label>\r\n                    <input\r\n                      onChange={handleInputChange}\r\n                      value={video.image}\r\n                      type=\"url\"\r\n                      name=\"image\"\r\n                      className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                      placeholder=\"https://www.google.com/imgres?imgurl=https%3A%2F%2Fwww.rockzonemag.com%2Fwp-content%2Fuploads%2F2020%2F04%2FSonic-Pelicula-poster.gif&imgrefurl=https%3A%2F%2Fwww.rockzonemag.com%2Fsonic-la-pelicula%2F&tbnid=nVbP0tLwbnTvAM&vet=12ahUKEwjjjqLlpavuAhV4L7kGHTH9BowQMygCegUIARCvAQ..i&docid=LWZWwOLJJoa-6M&w=1023&h=1279&q=imagen%20pelicula&ved=2ahUKEwjjjqLlpavuAhV4L7kGHTH9BowQMygCegUIARCvAQ\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"-mx-3 flex mb-6\">\r\n                    <div className=\"md:w-1/2 px-3 mb-6 md:mb-0\">\r\n                      <label className=\"leading-loose\">Nombre</label>\r\n                      <input\r\n                        onChange={handleInputChange}\r\n                        name=\"title\"\r\n                        value={video.title}\r\n                        type=\"text\"\r\n                        className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                        placeholder=\"Soul\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"md:w-1/2 px-3\">\r\n                      <label className=\"leading-loose\">Año</label>\r\n                      <input\r\n                        onChange={handleInputChange}\r\n                        name=\"year\"\r\n                        value={video.year}\r\n                        type=\"text\"\r\n                        className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                        placeholder=\"Año\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"md:w-1/2 px-3\">\r\n                      <label className=\"leading-loose\">Duración</label>\r\n                      <input\r\n                        onChange={handleInputChange}\r\n                        name=\"duration\"\r\n                        value={video.duration}\r\n                        type=\"text\"\r\n                        className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                        placeholder=\"Duración\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"-mx-3 flex mb-6\">\r\n                    <div className=\"md:w-1/2 px-3 mb-6 md:mb-0\">\r\n                      <label className=\"leading-loose\">Pais</label>\r\n                      {/* INICIA EL DIV PARA PAISES */}\r\n                      <div className=\"flex flex-col\">\r\n                        <div className=\"w-full flex flex-col items-center\">\r\n                          <div className=\"w-full\">\r\n                            <div className=\"flex flex-col items-center relative\">\r\n                              <div className=\"w-full\">\r\n                                <div className=\"p-1 bg-white flex border border-gray-300 rounded \">\r\n                                  <select\r\n                                    className=\"w-full outline-none\"\r\n                                    name=\"country\"\r\n                                    value={video.country}\r\n                                    onChange={handleSelectChange}\r\n                                  >\r\n                                    {countrys.map((country) => (\r\n                                      <CountryItem\r\n                                        key={country._id}\r\n                                        country={country}\r\n                                      />\r\n                                    ))}\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                              {/**<div className={classNameVisiblePais}>\r\n                              <div className=\"flex flex-col w-full\">\r\n                                <div className=\"cursor-pointer w-full border-gray-100 rounded-b \">\r\n                                  {\r\n                                    // eslint-disable-next-line array-callback-return\r\n                                    countrys.map((country) => (\r\n                                      <CountryItem\r\n                                        key={country.cod}\r\n                                        country={country}\r\n                                        //handleGenres={handleGenres}\r\n                                      />\r\n                                    ))\r\n                                  }\r\n                                </div>\r\n                              </div>\r\n                            </div> */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* FIN DIV PARA PAISES */}\r\n                    </div>\r\n                    <div className=\"md:w-1/2 px-3 mb-6 md:mb-0\">\r\n                      <label className=\"leading-loose\">Generos</label>\r\n                      <div className=\"w-full\">\r\n                        <div className=\"flex flex-col items-center relative\">\r\n                          <div className=\"w-full  svelte-1l8159u\">\r\n                            <div className=\"mb-2 p-1 flex border border-gray-200 bg-white rounded svelte-1l8159u\">\r\n                              <div className=\"flex flex-auto flex-wrap\">\r\n                                {Obtienegenre.map((mvgen) => (\r\n                                  <MostrarGenre key={mvgen} mvgen={mvgen} />\r\n                                ))}\r\n\r\n                                <div className=\"flex-1\">\r\n                                  <input\r\n                                    onChange={onKeyFiltroGenres}\r\n                                    name=\"genres\"\r\n                                    //placeholder\r\n                                    className=\"bg-transparent p-1 px-2 appearance-none outline-none h-full w-full text-gray-800\"\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"text-gray-300 w-8 py-1 pl-2 pr-1 border-l flex items-center border-gray-200 svelte-1l8159u\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => handleVisible()}\r\n                                  className=\"cursor-pointer w-6 h-6 text-gray-600 outline-none focus:outline-none\"\r\n                                >\r\n                                  {isVisible.active ? (\r\n                                    <>\r\n                                      <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"100%\"\r\n                                        height=\"100%\"\r\n                                        fill=\"none\"\r\n                                        viewBox=\"0 0 24 24\"\r\n                                        stroke=\"currentColor\"\r\n                                        strokeWidth={2}\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                        className=\"feather feather-chevron-up w-4 h-4\"\r\n                                      >\r\n                                        <path\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                          strokeWidth={2}\r\n                                          d=\"M5 10l7-7m0 0l7 7m-7-7v18\"\r\n                                        ></path>\r\n                                      </svg>\r\n                                    </>\r\n                                  ) : (\r\n                                    <>\r\n                                      <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"100%\"\r\n                                        height=\"100%\"\r\n                                        fill=\"none\"\r\n                                        viewBox=\"0 0 24 24\"\r\n                                        stroke=\"currentColor\"\r\n                                        strokeWidth={2}\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                        className=\"feather feather-chevron-up w-4 h-4\"\r\n                                      >\r\n                                        <path\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                          strokeWidth={2}\r\n                                          d=\"M19 14l-7 7m0 0l-7-7m7 7V3\"\r\n                                        ></path>\r\n                                      </svg>\r\n                                    </>\r\n                                  )}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"absolute shadow top-100 bg-white z-40 w-full lef-0 rounded max-h-select overflow-y-auto svelte-5uyqqj\">\r\n                            <select\r\n                              multiple={true}\r\n                              className={classNameVisible}\r\n                              //value={movie.country.name}\r\n                              onChange={handleGenres}\r\n                            >\r\n                              {\r\n                                // eslint-disable-next-line array-callback-return\r\n                                genres.map((genre) => (\r\n                                  <GenresItem\r\n                                    key={genre._id}\r\n                                    genre={genre}\r\n                                    handleGenres={handleGenres}\r\n                                  />\r\n                                ))\r\n                              }\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex flex-col h-30\">\r\n                    <textarea\r\n                      onChange={handleInputChange}\r\n                      name=\"description\"\r\n                      value={video.description}\r\n                      className=\"description text-gray-600 sec p-3 h-60 border focus:ring-gray-500 focus:border-gray-900 rounded-md outline-none\"\r\n                      spellCheck=\"false\"\r\n                      placeholder=\"Sinópsis\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"pt-4 flex items-center space-x-4\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={closeModal}\r\n                      className=\"flex justify-center items-center w-full text-gray-900 px-4 py-3 rounded-md focus:outline-none\"\r\n                    >\r\n                      <svg\r\n                        className=\"w-6 h-6 mr-3\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M6 18L18 6M6 6l12 12\"\r\n                        />\r\n                      </svg>{\" \"}\r\n                      Cancelar\r\n                    </button>\r\n                    {video._id ? (\r\n                      <>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"bg-red-500 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none\"\r\n                        >\r\n                          Actualizar\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"bg-blue-500 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none\"\r\n                        >\r\n                          Registrar\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n          <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n            <table className=\"min-w-full leading-normal\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Nombre\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Origen\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Año\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Genero\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Creado\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Estado\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Acciones\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  // eslint-disable-next-line array-callback-return\r\n                  videos.map((video) => (\r\n                    <VideoItem\r\n                      key={video._id}\r\n                      video={video}\r\n                      videos={getListVideos}\r\n                      modal={opeMondalId}\r\n                    />\r\n                  ))\r\n                }\r\n              </tbody>\r\n            </table>\r\n            {/**\r\n               * <div className=\"px-5 py-5 bg-white border-t flex flex-col xs:flex-row items-center xs:justify-between          \">\r\n              <span className=\"text-xs xs:text-sm text-gray-900\">\r\n                Showing 1 to 4 of 50 Entries\r\n              </span>\r\n              <div className=\"inline-flex mt-2 xs:mt-0\">\r\n                <button className=\"text-sm bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded-l\">\r\n                  Prev\r\n                </button>\r\n                <button className=\"text-sm bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded-r\">\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n               */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Video\\VideoItem.jsx",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Serie\\SerieList.jsx",["187","188","189","190"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport Modal from \"react-modal\";\r\n\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\n\r\nimport { GenresItem } from \"../Genres/GenresItem\";\r\nimport { getGenres } from \"../Genres/GenresService\";\r\nimport { getCountrys } from \"../Country/CountryService\";\r\nimport { CountryItem } from \"../Country/CountryItem\";\r\nimport { AlertError, AlertSuccess } from \"../lib/Alert\";\r\nimport { StatusContext } from \"../Context/Components\";\r\n\r\nimport * as serieService from \"./SerieService\";\r\nimport * as videoService from \"../Video/VideoService\";\r\nimport { SerieItem } from \"./SerieItem\";\r\nimport { SeasonItem } from \"./SeasonItem\";\r\nimport { ChapterItem } from \"./ChapterItem\";\r\n\r\n//import Autocomplete from \"react-autocomplete\"\r\n/*\r\n * top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\", \r\n */\r\nconst customStyles = {\r\n  content: {\r\n    height: \"628px\",\r\n    top: \"2%\",\r\n    left: \"20%\",\r\n    right: \"20%\",\r\n    bottom: \"auto\",\r\n  },\r\n};\r\n\r\nconst customStyleDefault = {\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  right: \"auto\",\r\n  bottom: \"auto\",\r\n  marginRight: \"-50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n};\r\n\r\n//Modal.AppElement(\"body\");\r\n\r\nexport const SerieList = ({ calcularCantidad }) => {\r\n  const initialValue = {\r\n    title: \"\",\r\n    image: \"\",\r\n    description: \"\",\r\n    year: \"\",\r\n    genres: [],\r\n    country: \"Afganistán\",\r\n  };\r\n\r\n  const initialSeason = {\r\n    name: \"\",\r\n    serie: \"\",\r\n  };\r\n\r\n  const initialChapter = {\r\n    name: \"\",\r\n    season: \"\",\r\n    url: \"\",\r\n    description: \"\",\r\n    duration: \"\",\r\n    web: \"www13.pelisplus.movie\",\r\n    server: \"Peliscloud\",\r\n  };\r\n\r\n  const initialValueMessage = {\r\n    error: false,\r\n    success: false,\r\n    title: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  const [message, setMessage] = useState(initialValueMessage);\r\n  const [serie, setSerie] = useState(initialValue);\r\n  const [season, setSeason] = useState(initialSeason);\r\n  const [chapter, setChapter] = useState(initialChapter);\r\n  const [series, setSeries] = useState([]);\r\n  const [seasons, setSeasons] = useState([]);\r\n  const [chapters, setChapters] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [countrys, setCountrys] = useState([]);\r\n  const [loading, setLoading] = useState(\"Completar URL\");\r\n  const [isEncontrado, setEncontrado] = useState(false);\r\n  const [Obtienegenre, setObtieneGenre] = useState([]);\r\n  const [totalSeries, setTotalSeries] = useState(0);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [modalIsOpenTemporadas, setIsOpenTemporadas] = useState(false);\r\n  const [modalIsOpenCapitulos, setIsOpenCapitulos] = useState(false);\r\n  const [isRegistroSeason, setMostrarRegistroSeason] = useState(false);\r\n  const [isRegistroChapter, setMostrarRegistroChapter] = useState(false);\r\n\r\n  const [isVisible, setVisible] = useState({\r\n    active: false,\r\n  });\r\n\r\n  const onKeyUpValuePeliiculas = async (e) => {\r\n    const { value } = e.target;\r\n    const res = await serieService.getSeries();\r\n    //console.log(res.data[0].role.name);\r\n    const buscarSeries = res.data.filter(\r\n      (serie) =>\r\n        String(serie.country.name).toLowerCase().indexOf(value) >= 0 ||\r\n        String(serie.country.name).toUpperCase().indexOf(value) >= 0 ||\r\n        String(serie.state).toLowerCase().indexOf(value) >= 0 ||\r\n        String(serie.state).toUpperCase().indexOf(value) >= 0 ||\r\n        String(serie.title).toLowerCase().indexOf(value) >= 0 ||\r\n        String(serie.title).toUpperCase().indexOf(value) >= 0 ||\r\n        String(serie.year).toLowerCase().indexOf(value) >= 0 ||\r\n        String(serie.year).toUpperCase().indexOf(value) >= 0 ||\r\n        String(serie.genres.map((pengre) => pengre.name))\r\n          .toLowerCase()\r\n          .indexOf(value) >= 0 ||\r\n        String(serie.genres.map((pengre) => pengre.name))\r\n          .toUpperCase()\r\n          .indexOf(value) >= 0\r\n    );\r\n    const cantidadUsuarios = buscarSeries.length;\r\n    setTotalSeries(cantidadUsuarios);\r\n    if (cantidadUsuarios.length === 0) {\r\n      console.log(\"Buscando alumnos...\");\r\n    } else {\r\n      setSeries(buscarSeries);\r\n    }\r\n  };\r\n\r\n  const classNameVisible = isVisible.active\r\n    ? \"w-full overflow-hidden focus:outline-none\"\r\n    : \"hidden\";\r\n\r\n  const handleVisible = () => {\r\n    setVisible({ active: !isVisible.active });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setSerie({ ...serie, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeSeason = (e) => {\r\n    setSeason({ ...season, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeChapter = (e) => {\r\n    setChapter({ ...chapter, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    setSerie({ ...serie, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleGenres = async (e) => {\r\n    if (Obtienegenre.length === 0) {\r\n      Obtienegenre.push(e.target.value);\r\n    } else {\r\n      const encontrado = Obtienegenre.filter(\r\n        (genre) => genre === e.target.value\r\n      );\r\n      if (encontrado.length !== 0) {\r\n        let position = Obtienegenre.indexOf(encontrado);\r\n        Obtienegenre.splice(position, 1);\r\n      } else {\r\n        Obtienegenre.push(e.target.value);\r\n      }\r\n    }\r\n    setSerie({ ...serie, genres: Obtienegenre });\r\n  };\r\n\r\n  const onKeyUpValue = async (e) => {\r\n    const { value } = e.target;\r\n    if (value.length <= 0) {\r\n      setLoading(\"\");\r\n      setEncontrado(false);\r\n    }\r\n\r\n    if (chapter.server === \"Peliscloud\") {\r\n      setLoading(\"Cargando...\");\r\n      try {\r\n        const peli = await videoService.getURLPeli(value);\r\n\r\n        if (peli.statusText === \"OK\") {\r\n          setEncontrado(false);\r\n          return setLoading(\"URL invalido\");\r\n        }\r\n\r\n        setLoading(\"Espere...\");\r\n        let domain = value.substr(0, 31);\r\n        let subdomain = peli.data.substr(-77, 76);\r\n        setLoading(domain.trim() + subdomain.trim());\r\n        setEncontrado(true);\r\n      } catch (e) {\r\n        setEncontrado(false);\r\n        setLoading(\"URL invalido\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const onKeyFiltroGenres = async (e) => {\r\n    const { value } = e.target;\r\n    if (value.length < 0 || value.length === 0) {\r\n      setVisible({ active: false });\r\n    } else {\r\n      setVisible({ active: true });\r\n      const res = await getGenres();\r\n      const buscarGenres = res.data.filter(\r\n        (genre) =>\r\n          genre.name.toLowerCase().indexOf(value) >= 0 ||\r\n          genre.name.toUpperCase().indexOf(value) >= 0\r\n      );\r\n      setGenres(buscarGenres);\r\n    }\r\n  };\r\n\r\n  const getListSeries = async () => {\r\n    const res = await serieService.getSeries();\r\n    setTotalSeries(res.data.length);\r\n    setSeries(res.data);\r\n  };\r\n\r\n  const getListSeason = async (id) => {\r\n    try {\r\n      const res = await serieService.getSeasons(id);\r\n      setSeasons(res.data);\r\n      if (season._id) setSeason({ ...season });\r\n      else setSeason({ name: \"\", serie: id });\r\n    } catch (e) {\r\n      if (e.request.status === 401) {\r\n        setMessage({\r\n          error: true,\r\n          title: \"ERROR\",\r\n          message: \"Recargue la página\",\r\n        });\r\n        return;\r\n      }\r\n      console.log(e.request);\r\n    }\r\n  };\r\n\r\n  const getListChapters = async (id) => {\r\n    try {\r\n      const res = await serieService.getChapters(id);\r\n      setChapters(res.data);\r\n      if (chapter._id) setChapter({ ...chapter });\r\n      else\r\n        setChapter({\r\n          name: \"\",\r\n          url: \"\",\r\n          description: \"\",\r\n          duration: \"\",\r\n          web: \"www13.pelisplus.movie\",\r\n          server: \"Peliscloud\",\r\n          season: id,\r\n        });\r\n    } catch (e) {\r\n      if (e.request.status === 401) {\r\n        setMessage({\r\n          error: true,\r\n          title: \"ERROR\",\r\n          message: \"Recargue la página\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getListGenres = async () => {\r\n    const res = await getGenres();\r\n    setGenres(res.data);\r\n  };\r\n\r\n  const getListCountrys = async () => {\r\n    const res = await getCountrys();\r\n    setCountrys(\r\n      res.data.sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0))\r\n    );\r\n  };\r\n\r\n  const getSerieId = async (id) => {\r\n    const res = await serieService.getSerie(id);\r\n    setSerie({\r\n      ...res.data,\r\n      country: res.data.country ? res.data.country.name : \"Afganistán\",\r\n      genres: res.data.genres.map((genre) => genre.name),\r\n    });\r\n  };\r\n\r\n  const getSeasonId = async (id) => {\r\n    const res = await serieService.getSeason(id);\r\n    setSeason({\r\n      ...res.data,\r\n      serie: res.data.serie,\r\n    });\r\n  };\r\n\r\n  const getChapterId = async (id) => {\r\n    const res = await serieService.getChapter(id);\r\n    setChapter({\r\n      ...res.data,\r\n      season: res.data.season,\r\n    });\r\n  };\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function openModalTemporadas() {\r\n    setIsOpenTemporadas(true);\r\n  }\r\n\r\n  function closeModalTemporadas() {\r\n    setIsOpenTemporadas(false);\r\n  }\r\n\r\n  const openModalCapitulos = () => {\r\n    setIsOpenCapitulos(true);\r\n  };\r\n\r\n  const closeModalCapitulos = () => {\r\n    setIsOpenCapitulos(false);\r\n  };\r\n\r\n  function opeMondalId(id) {\r\n    getSerieId(id);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setSerie(initialValue);\r\n    setMessage(initialValueMessage);\r\n    setLoading(\"Completar URL\");\r\n    setIsOpen(false);\r\n    setEncontrado(false);\r\n    setVisible({ active: false });\r\n    setObtieneGenre([]);\r\n  }\r\n\r\n  const eliminaGenre = async (mvgen) => {\r\n    let totalGenre = await Obtienegenre.indexOf(mvgen);\r\n    await Obtienegenre.splice(totalGenre, 1);\r\n    const sobrante = Obtienegenre.map((name) => name);\r\n    if (serie._id) setSerie({ ...serie, genres: sobrante });\r\n    else setObtieneGenre(sobrante);\r\n  };\r\n  const handleSubmitChapter = async (e) => {\r\n    e.preventDefault();\r\n    if (chapter._id) {\r\n      try {\r\n        await serieService.updateChapter(chapter, chapter._id);\r\n        getListChapters(chapter.season);\r\n        setMessage({\r\n          success: true,\r\n          title: \"ÉXITO\",\r\n          message: \"Se actualizó correctamente. \",\r\n        });\r\n      } catch (e) {\r\n        if (e.request.status === 401) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: \"Recargue la página\",\r\n          });\r\n          return;\r\n        }\r\n        console.log(e.request);\r\n      }\r\n    } else {\r\n      try {\r\n        await serieService.newChapter(chapter);\r\n        setChapter({\r\n          ...chapter,\r\n          name: \"\",\r\n          url: \"\",\r\n          description: \"\",\r\n          duration: \"\",\r\n          web: \"www13.pelisplus.movie\",\r\n          server: \"Peliscloud\",\r\n        });\r\n        getListChapters(chapter.season);\r\n        setMessage({\r\n          success: true,\r\n          title: \"ÉXITO\",\r\n          message: \"Se registró correctamente. \",\r\n        });\r\n      } catch (e) {\r\n        const response = e.request.response || null;\r\n        const error = JSON.parse(e.request.response) || null;\r\n        if (e.request.status === 401) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: \"Recargue la página\",\r\n          });\r\n          return;\r\n        }\r\n        if (error.errors) {\r\n          if (error.errors.url) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"Completar URL\",\r\n            });\r\n            return;\r\n          }\r\n          if (error.errors.name) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"Completar nombre del capitulo\",\r\n            });\r\n            return;\r\n          }\r\n        }\r\n        if (response) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: JSON.parse(response),\r\n          });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmitSeason = async (e) => {\r\n    e.preventDefault();\r\n    if (season._id) {\r\n      try {\r\n        await serieService.updateSeason(season, season._id);\r\n        getListSeason(season.serie);\r\n        setMessage({\r\n          success: true,\r\n          title: \"ÉXITO\",\r\n          message: \"Se actualizó correctamente. \",\r\n        });\r\n      } catch (e) {\r\n        if (e.request.status === 401) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: \"Recargue la página\",\r\n          });\r\n          return;\r\n        }\r\n        console.log(e.request);\r\n      }\r\n    } else {\r\n      try {\r\n        await serieService.newSeason(season);\r\n        setSeason({ ...season, name: \"\" });\r\n        getListSeason(season.serie);\r\n        setMessage({\r\n          success: true,\r\n          title: \"ÉXITO\",\r\n          message: \"Se registró correctamente. \",\r\n        });\r\n      } catch (e) {\r\n        const response = e.request.response || null;\r\n        const error = JSON.parse(e.request.response) || null;\r\n\r\n        if (e.request.status === 401) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: \"Recargue la página\",\r\n          });\r\n          return;\r\n        }\r\n        if (error.errors) {\r\n          if (error.errors.url) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"Completar URL\",\r\n            });\r\n            return;\r\n          }\r\n          if (error.errors.name) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"Completar nombre de la temporada\",\r\n            });\r\n            return;\r\n          }\r\n        }\r\n        if (response) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: JSON.parse(response),\r\n          });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (serie._id) {\r\n      try {\r\n        await serieService.updateSerie(serie._id, serie);\r\n      } catch (e) {\r\n        if (e.request.status === 401) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: \"Recargue la página\",\r\n          });\r\n          return;\r\n        }\r\n      }\r\n    } else {\r\n      try {\r\n        await serieService.newSerie(serie);\r\n        setSerie(initialValue);\r\n        setMessage(initialValueMessage);\r\n        calcularCantidad();\r\n        setGenres([]);\r\n        setCountrys([]);\r\n        setEncontrado(false);\r\n        setObtieneGenre([]);\r\n        setLoading(\"Completar URL\");\r\n      } catch (e) {\r\n        const error = JSON.parse(e.request.response) || null;\r\n        console.log(error);\r\n        if (e.request.status === 401) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: \"Recargue la página\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        if (error.errors) {\r\n          if (error.errors.url) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"Completar URL\",\r\n            });\r\n            return;\r\n          }\r\n\r\n          if (error.errors.image) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"Completar URL portada\",\r\n            });\r\n            return;\r\n          }\r\n          if (error.errors.title) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"Completar título del video\",\r\n            });\r\n            return;\r\n          }\r\n        }\r\n        if (error.keyValue) {\r\n          if (error.keyValue.image) {\r\n            setMessage({\r\n              error: true,\r\n              title: \"ERROR\",\r\n              message: \"URL de la portada ya existe\",\r\n            });\r\n            return;\r\n          }\r\n        }\r\n        if (error) {\r\n          setMessage({\r\n            error: true,\r\n            title: \"ERROR\",\r\n            message: \"URL Generado ya existe\",\r\n          });\r\n          setEncontrado(false);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListSeries();\r\n    getListGenres();\r\n    getListCountrys();\r\n    if (loading !== \"Completar URL\") setChapter({ ...chapter, url: loading });\r\n    if (serie._id) setObtieneGenre(serie.genres.map((genre) => genre));\r\n    if (season._id) getSeasonId(season._id);\r\n    if (chapter._id) getChapterId(chapter._id);\r\n  }, [loading, serie._id, season._id, chapter._id]);\r\n\r\n  const MostrarGenre = ({ mvgen }) => {\r\n    return (\r\n      <>\r\n        <div className=\"flex justify-center items-center m-1 font-medium py-1 px-2 bg-white rounded-full text-teal-700 bg-blue-100 border border-blue-300 \">\r\n          <div className=\"text-xs font-normal leading-none max-w-full flex-initial\">\r\n            {Obtienegenre.length === 0 ? setObtieneGenre([]) : mvgen}\r\n          </div>\r\n          <div className=\"flex flex-auto flex-row-reverse\">\r\n            <div>\r\n              <svg\r\n                onClick={() => eliminaGenre(mvgen)}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth={2}\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                className=\"feather feather-x cursor-pointer hover:text-teal-400 rounded-full w-4 h-4 ml-2\"\r\n              >\r\n                <line x1={18} y1={6} x2={6} y2={18} />\r\n                <line x1={6} y1={6} x2={18} y2={18} />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-4 sm:px-8\">\r\n      <div className=\"py-8\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-semibold leading-tight\">Series</h2>\r\n        </div>\r\n        <div>\r\n          Busca series por país, título, año, estado(1:activo, 2:inactivo) o\r\n          género\r\n        </div>\r\n        <div className=\"my-2 sm:flex-row flex flex-row\">\r\n          <div className=\"relative\">\r\n            <span className=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\r\n              <svg\r\n                viewBox=\"0 0 24 24\"\r\n                className=\"h-4 w-4 fill-current text-gray-500\"\r\n              >\r\n                <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\r\n              </svg>\r\n            </span>\r\n            <input\r\n              onKeyUp={onKeyUpValuePeliiculas}\r\n              placeholder=\"Buscar\"\r\n              className=\"appearance-none rounded-r rounded-l sm:rounded-l-none border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <span>{totalSeries} Series</span>\r\n        <div className=\"flex flex-row-reverse\">\r\n          <button\r\n            onClick={openModal}\r\n            type=\"button\"\r\n            className=\"border border-indigo-500 bg-indigo-500 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-indigo-600 focus:outline-none focus:shadow-outline\"\r\n          >\r\n            Registrar\r\n          </button>\r\n          <Modal\r\n            isOpen={modalIsOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            contentLabel=\"Pelicula\"\r\n            shouldCloseOnOverlayClick={false}\r\n          >\r\n            {serie._id ? (\r\n              <>\r\n                <div className=\"flex items-center space-x-5\">\r\n                  <div className=\"h-14 w-14 bg-yellow-200 rounded-full flex flex-shrink-0 justify-center items-center text-yellow-500 text-2xl font-mono\">\r\n                    i\r\n                  </div>\r\n                  <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                    <h2 className=\"leading-relaxed\">Actualizar serie</h2>\r\n                    <p className=\"text-sm text-gray-500 font-normal leading-relaxed\">\r\n                      Actualizar serie.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"flex items-center space-x-5\">\r\n                  <div className=\"h-14 w-14 bg-green-200 rounded-full flex flex-shrink-0 justify-center items-center text-green-500 text-2xl font-mono\">\r\n                    <svg\r\n                      className=\"w-6 h-6 \"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M12 4v16m8-8H4\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                    <h2 className=\"leading-relaxed\">Registrar serie</h2>\r\n                    <p className=\"text-sm text-gray-500 font-normal leading-relaxed\">\r\n                      Registrar serie.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n            <br />\r\n            {message.error ? <AlertError message={message} /> : \"\"}\r\n            {message.success ? <AlertSuccess message={message} /> : \"\"}\r\n\r\n            <div className=\"divide-y divide-gray-200\">\r\n              <div className=\"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"flex flex-col\">\r\n                    <label className=\"leading-loose\">URL Portada</label>\r\n                    <input\r\n                      onChange={handleInputChange}\r\n                      value={serie.image}\r\n                      type=\"url\"\r\n                      name=\"image\"\r\n                      className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                      placeholder=\"https://www.google.com/imgres?imgurl=https%3A%2F%2Fwww.rockzonemag.com%2Fwp-content%2Fuploads%2F2020%2F04%2FSonic-Pelicula-poster.gif&imgrefurl=https%3A%2F%2Fwww.rockzonemag.com%2Fsonic-la-pelicula%2F&tbnid=nVbP0tLwbnTvAM&vet=12ahUKEwjjjqLlpavuAhV4L7kGHTH9BowQMygCegUIARCvAQ..i&docid=LWZWwOLJJoa-6M&w=1023&h=1279&q=imagen%20pelicula&ved=2ahUKEwjjjqLlpavuAhV4L7kGHTH9BowQMygCegUIARCvAQ\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"-mx-3 flex mb-6\">\r\n                    <div className=\"md:w-1/2 px-3 mb-6 md:mb-0\">\r\n                      <label className=\"leading-loose\">Nombre</label>\r\n                      <input\r\n                        onChange={handleInputChange}\r\n                        name=\"title\"\r\n                        value={serie.title}\r\n                        type=\"text\"\r\n                        className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                        placeholder=\"Soul\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"md:w-1/2 px-3\">\r\n                      <label className=\"leading-loose\">Año</label>\r\n                      <input\r\n                        onChange={handleInputChange}\r\n                        name=\"year\"\r\n                        value={serie.year}\r\n                        type=\"text\"\r\n                        className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                        placeholder=\"Año\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"-mx-3 flex mb-6\">\r\n                    <div className=\"md:w-1/2 px-3 mb-6 md:mb-0\">\r\n                      <label className=\"leading-loose\">Pais</label>\r\n                      {/* INICIA EL DIV PARA PAISES */}\r\n                      <div className=\"flex flex-col\">\r\n                        <div className=\"w-full flex flex-col items-center\">\r\n                          <div className=\"w-full\">\r\n                            <div className=\"flex flex-col items-center relative\">\r\n                              <div className=\"w-full\">\r\n                                <div className=\"p-1 bg-white flex border border-gray-300 rounded \">\r\n                                  <select\r\n                                    className=\"w-full outline-none\"\r\n                                    name=\"country\"\r\n                                    value={serie.country}\r\n                                    onChange={handleSelectChange}\r\n                                  >\r\n                                    {countrys.map((country) => (\r\n                                      <CountryItem\r\n                                        key={country._id}\r\n                                        country={country}\r\n                                      />\r\n                                    ))}\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* FIN DIV PARA PAISES */}\r\n                    </div>\r\n                    <div className=\"md:w-1/2 px-3 mb-6 md:mb-0\">\r\n                      <label className=\"leading-loose\">Generos</label>\r\n                      <div className=\"w-full\">\r\n                        <div className=\"flex flex-col items-center relative\">\r\n                          <div className=\"w-full  svelte-1l8159u\">\r\n                            <div className=\"mb-2 p-1 flex border border-gray-200 bg-white rounded svelte-1l8159u\">\r\n                              <div className=\"flex flex-auto flex-wrap\">\r\n                                {Obtienegenre.map((mvgen) => (\r\n                                  <MostrarGenre key={mvgen} mvgen={mvgen} />\r\n                                ))}\r\n\r\n                                <div className=\"flex-1\">\r\n                                  <input\r\n                                    onChange={onKeyFiltroGenres}\r\n                                    name=\"genres\"\r\n                                    //placeholder\r\n                                    className=\"bg-transparent p-1 px-2 appearance-none outline-none h-full w-full text-gray-800\"\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"text-gray-300 w-8 py-1 pl-2 pr-1 border-l flex items-center border-gray-200 svelte-1l8159u\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => handleVisible()}\r\n                                  className=\"cursor-pointer w-6 h-6 text-gray-600 outline-none focus:outline-none\"\r\n                                >\r\n                                  {isVisible.active ? (\r\n                                    <>\r\n                                      <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"100%\"\r\n                                        height=\"100%\"\r\n                                        fill=\"none\"\r\n                                        viewBox=\"0 0 24 24\"\r\n                                        stroke=\"currentColor\"\r\n                                        strokeWidth={2}\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                        className=\"feather feather-chevron-up w-4 h-4\"\r\n                                      >\r\n                                        <path\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                          strokeWidth={2}\r\n                                          d=\"M5 10l7-7m0 0l7 7m-7-7v18\"\r\n                                        ></path>\r\n                                      </svg>\r\n                                    </>\r\n                                  ) : (\r\n                                    <>\r\n                                      <svg\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"100%\"\r\n                                        height=\"100%\"\r\n                                        fill=\"none\"\r\n                                        viewBox=\"0 0 24 24\"\r\n                                        stroke=\"currentColor\"\r\n                                        strokeWidth={2}\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                        className=\"feather feather-chevron-up w-4 h-4\"\r\n                                      >\r\n                                        <path\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                          strokeWidth={2}\r\n                                          d=\"M19 14l-7 7m0 0l-7-7m7 7V3\"\r\n                                        ></path>\r\n                                      </svg>\r\n                                    </>\r\n                                  )}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"absolute shadow top-100 bg-white z-40 w-full lef-0 rounded max-h-select overflow-y-auto svelte-5uyqqj\">\r\n                            <select\r\n                              multiple={true}\r\n                              className={classNameVisible}\r\n                              //value={movie.country.name}\r\n                              onChange={handleGenres}\r\n                            >\r\n                              {\r\n                                // eslint-disable-next-line array-callback-return\r\n                                genres.map((genre) => (\r\n                                  <GenresItem\r\n                                    key={genre._id}\r\n                                    genre={genre}\r\n                                    handleGenres={handleGenres}\r\n                                  />\r\n                                ))\r\n                              }\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex flex-col h-30\">\r\n                    <textarea\r\n                      onChange={handleInputChange}\r\n                      name=\"description\"\r\n                      value={serie.description}\r\n                      className=\"description text-gray-600 sec p-3 h-60 border focus:ring-gray-500 focus:border-gray-900 rounded-md outline-none\"\r\n                      spellCheck=\"false\"\r\n                      placeholder=\"Sinópsis\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"pt-4 flex items-center space-x-4\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={closeModal}\r\n                      className=\"flex justify-center items-center w-full text-gray-900 px-4 py-3 rounded-md focus:outline-none\"\r\n                    >\r\n                      <svg\r\n                        className=\"w-6 h-6 mr-3\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M6 18L18 6M6 6l12 12\"\r\n                        />\r\n                      </svg>{\" \"}\r\n                      Cancelar\r\n                    </button>\r\n                    {serie._id ? (\r\n                      <>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"bg-red-500 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none\"\r\n                        >\r\n                          Actualizar\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"bg-blue-500 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none\"\r\n                        >\r\n                          Registrar\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n\r\n          <Modal\r\n            isOpen={modalIsOpenTemporadas}\r\n            onRequestClose={closeModalTemporadas}\r\n            style={customStyleDefault}\r\n            contentLabel=\"Temporadas\"\r\n            shouldCloseOnOverlayClick={false}\r\n          >\r\n            {isRegistroSeason ? (\r\n              <>\r\n                {serie._id ? (\r\n                  <>\r\n                    <div className=\"flex items-center space-x-5\">\r\n                      <div className=\"h-14 w-14 bg-yellow-200 rounded-full flex flex-shrink-0 justify-center items-center text-yellow-500 text-2xl font-mono\">\r\n                        i\r\n                      </div>\r\n                      <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                        <h2 className=\"leading-relaxed\">Actualizar serie</h2>\r\n                        <p className=\"text-sm text-gray-500 font-normal leading-relaxed\">\r\n                          Actualizar serie.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {season._id ? (\r\n                      <>\r\n                        <div className=\"flex items-center space-x-5\">\r\n                          <div className=\"h-14 w-14 bg-yellow-200 rounded-full flex flex-shrink-0 justify-center items-center text-yellow-500 text-2xl font-mono\">\r\n                            i\r\n                          </div>\r\n                          <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                            <h2 className=\"leading-relaxed\">\r\n                              Actualizar Temporada\r\n                            </h2>\r\n                            <p className=\"text-sm text-gray-500 font-normal leading-relaxed\">\r\n                              Actualizar temporada.\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"flex items-center space-x-5\">\r\n                          <div className=\"h-14 w-14 bg-green-200 rounded-full flex flex-shrink-0 justify-center items-center text-green-500 text-2xl font-mono\">\r\n                            <svg\r\n                              className=\"w-6 h-6 \"\r\n                              fill=\"none\"\r\n                              stroke=\"currentColor\"\r\n                              viewBox=\"0 0 24 24\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                              <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                strokeWidth=\"2\"\r\n                                d=\"M12 4v16m8-8H4\"\r\n                              />\r\n                            </svg>\r\n                          </div>\r\n                          <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                            <h2 className=\"leading-relaxed\">\r\n                              Registrar Temporada\r\n                            </h2>\r\n                            <p className=\"text-sm text-gray-500 font-normal leading-relaxed\">\r\n                              Registrar temporada.\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n                <br />\r\n                {message.error ? <AlertError message={message} /> : \"\"}\r\n                {message.success ? <AlertSuccess message={message} /> : \"\"}\r\n                <div className=\"divide-y divide-gray-200\">\r\n                  <div className=\"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\r\n                    <form onSubmit={handleSubmitSeason}>\r\n                      <div className=\"flex flex-col\">\r\n                        <label className=\"leading-loose\">Nombre</label>\r\n                        <input\r\n                          onChange={handleInputChangeSeason}\r\n                          value={season.name}\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Temporada 1\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"pt-4 flex items-center space-x-4\">\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => {\r\n                            setMessage(initialValueMessage);\r\n                            setSeason({\r\n                              ...season,\r\n                              name: \"\",\r\n                              state: \"\",\r\n                              _id: \"\",\r\n                              createdAt: \"\",\r\n                              updatedAt: \"\",\r\n                            });\r\n                            setMostrarRegistroSeason(false);\r\n                          }}\r\n                          className=\"flex justify-center items-center w-full text-gray-900 px-4 py-3 rounded-md focus:outline-none\"\r\n                        >\r\n                          <svg\r\n                            className=\"w-6 h-6 mr-3\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                              strokeWidth={2}\r\n                              d=\"M6 18L18 6M6 6l12 12\"\r\n                            />\r\n                          </svg>{\" \"}\r\n                          Cancelar\r\n                        </button>\r\n                        {serie._id ? (\r\n                          <>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"bg-red-500 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none\"\r\n                            >\r\n                              Actualizar\r\n                            </button>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"bg-blue-500 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none\"\r\n                            >\r\n                              Registrar\r\n                            </button>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  onClick={() => setMostrarRegistroSeason(true)}\r\n                  type=\"button\"\r\n                  className=\"border border-indigo-500 bg-indigo-500 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-indigo-600 focus:outline-none focus:shadow-outline\"\r\n                >\r\n                  Nueva Temporada\r\n                </button>\r\n                <button\r\n                  onClick={() => closeModalTemporadas()}\r\n                  type=\"button\"\r\n                  className=\"text-dark rounded-md px-4 py-2 m-2  select-none focus:outline-none focus:shadow-outline\"\r\n                >\r\n                  Salir\r\n                </button>\r\n                <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n                  <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n                    <table className=\"min-w-full leading-normal\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Nombre\r\n                          </th>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Serie\r\n                          </th>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Creado\r\n                          </th>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Estado\r\n                          </th>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Acciones\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {\r\n                          // eslint-disable-next-line array-callback-return\r\n                          seasons.map((season) => (\r\n                            <SeasonItem\r\n                              key={serie._id}\r\n                              season={season}\r\n                              getListSeason={getListSeason} //seasons={getLis}\r\n                              setMostrarRegistroSeason={\r\n                                setMostrarRegistroSeason\r\n                              }\r\n                              getListChapters={getListChapters}\r\n                              getSeasonId={getSeasonId}\r\n                              openModalCapitulos={openModalCapitulos}\r\n                            />\r\n                          ))\r\n                        }\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </Modal>\r\n\r\n          <Modal\r\n            isOpen={modalIsOpenCapitulos}\r\n            onRequestClose={closeModalCapitulos}\r\n            style={customStyleDefault}\r\n            contentLabel=\"Capitulos\"\r\n            shouldCloseOnOverlayClick={false}\r\n          >\r\n            {isRegistroChapter ? (\r\n              <>\r\n                {chapter._id ? (\r\n                  <>\r\n                    <div className=\"flex items-center space-x-5\">\r\n                      <div className=\"h-14 w-14 bg-yellow-200 rounded-full flex flex-shrink-0 justify-center items-center text-yellow-500 text-2xl font-mono\">\r\n                        i\r\n                      </div>\r\n                      <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                        <h2 className=\"leading-relaxed\">Actualizar Capítulo</h2>\r\n                        <p className=\"text-sm text-gray-500 font-normal leading-relaxed\">\r\n                          Actualizar capítulo.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"flex items-center space-x-5\">\r\n                      <div className=\"h-14 w-14 bg-green-200 rounded-full flex flex-shrink-0 justify-center items-center text-green-500 text-2xl font-mono\">\r\n                        <svg\r\n                          className=\"w-6 h-6 \"\r\n                          fill=\"none\"\r\n                          stroke=\"currentColor\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth=\"2\"\r\n                            d=\"M12 4v16m8-8H4\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                      <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                        <h2 className=\"leading-relaxed\">Registrar Capítulo</h2>\r\n                        <p className=\"text-sm text-gray-500 font-normal leading-relaxed\">\r\n                          Registrar capítulo.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                <br />\r\n                {message.error ? <AlertError message={message} /> : \"\"}\r\n                {message.success ? <AlertSuccess message={message} /> : \"\"}\r\n                <div className=\"divide-y divide-gray-200\">\r\n                  <div className=\"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\r\n                    <form onSubmit={handleSubmitChapter}>\r\n                      <div className=\"-mx-3 flex mb-6\">\r\n                        <div className=\"md:w-1/2 px-3\">\r\n                          <label className=\"leading-loose\">Web</label>\r\n                          <div className=\"p-1 bg-white flex border border-gray-300 rounded\">\r\n                            <select\r\n                              className=\"w-full outline-none\"\r\n                              name=\"web\"\r\n                              value={chapter.web}\r\n                              onChange={handleInputChangeChapter}\r\n                            >\r\n                              <option value={\"www13.pelisplus.movie\"}>\r\n                                www13.pelisplus.movie\r\n                              </option>\r\n                              <option value={\"www.pelisplus.com\"}>\r\n                                www.pelisplus.com\r\n                              </option>\r\n                              <option value={\"www.pelisuplus.ne\"}>\r\n                                www.pelisuplus.ne\r\n                              </option>\r\n                              <option value={\"Otro\"}>Otro</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"md:w-1/2 px-3\">\r\n                          <label className=\"leading-loose\">Servidor</label>\r\n                          <div className=\"p-1 bg-white flex border border-gray-300 rounded\">\r\n                            <select\r\n                              className=\"w-full outline-none\"\r\n                              name=\"server\"\r\n                              value={chapter.server}\r\n                              onChange={handleInputChangeChapter}\r\n                            >\r\n                              <option value={\"Peliscloud\"}>Peliscloud</option>\r\n                              <option value={\"Upload\"}>Upload</option>\r\n                              <option value={\"Servidor\"}>Servidor</option>\r\n                              <option value={\"Otro\"}>Otro</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex flex-col\">\r\n                        <label className=\"leading-loose\">\r\n                          URL - {chapter.web} - {chapter.server}\r\n                        </label>\r\n                        <input\r\n                          type=\"url\"\r\n                          disabled={isEncontrado}\r\n                          onKeyUp={onKeyUpValue}\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"https://stream01.peliscloud.net/playlist/d504281aba0f7f8d8acedda2f3997def/1611102539492\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex flex-col\">\r\n                        <label className=\"leading-loose\">URL Generado</label>\r\n                        <input\r\n                          onChange={handleInputChangeChapter}\r\n                          type=\"text\"\r\n                          name=\"url\"\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          value={chapter._id ? chapter.url : loading}\r\n                          disabled={true}\r\n                          // eslint-disable-next-line react/jsx-no-duplicate-props\r\n                        />\r\n                      </div>\r\n                      <div className=\"-mx-3 flex mb-6\">\r\n                        <div className=\"md:w-1/2 px-3 mb-6 md:mb-0\">\r\n                          <label className=\"leading-loose\">Nombre</label>\r\n                          <input\r\n                            onChange={handleInputChangeChapter}\r\n                            name=\"name\"\r\n                            value={chapter.name}\r\n                            type=\"text\"\r\n                            className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                            placeholder=\"El inicio del fin\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"md:w-1/2 px-3\">\r\n                          <label className=\"leading-loose\">Duración</label>\r\n                          <input\r\n                            onChange={handleInputChangeChapter}\r\n                            name=\"duration\"\r\n                            value={chapter.duration}\r\n                            type=\"text\"\r\n                            className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                            placeholder=\"Duración\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex flex-col h-30\">\r\n                        <textarea\r\n                          onChange={handleInputChangeChapter}\r\n                          name=\"description\"\r\n                          value={chapter.description}\r\n                          className=\"description text-gray-600 sec p-3 h-60 border focus:ring-gray-500 focus:border-gray-900 rounded-md outline-none\"\r\n                          spellCheck=\"false\"\r\n                          placeholder=\"Sinópsis\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"pt-4 flex items-center space-x-4\">\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => {\r\n                            setMessage(initialValueMessage);\r\n                            setChapter({\r\n                              ...chapter,\r\n                              state: \"\",\r\n                              name: \"\",\r\n                              _id: \"\",\r\n                              url: \"\",\r\n                              description: \"\",\r\n                              duration: \"\",\r\n                              web: \"\",\r\n                              server: \"\",\r\n                              createdAt: \"\",\r\n                              updatedAt: \"\",\r\n                            });\r\n                            setMostrarRegistroChapter(false);\r\n                          }}\r\n                          className=\"flex justify-center items-center w-full text-gray-900 px-4 py-3 rounded-md focus:outline-none\"\r\n                        >\r\n                          <svg\r\n                            className=\"w-6 h-6 mr-3\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                              strokeWidth={2}\r\n                              d=\"M6 18L18 6M6 6l12 12\"\r\n                            />\r\n                          </svg>{\" \"}\r\n                          Cancelar\r\n                        </button>\r\n                        {serie._id ? (\r\n                          <>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"bg-red-500 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none\"\r\n                            >\r\n                              Actualizar\r\n                            </button>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"bg-blue-500 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none\"\r\n                            >\r\n                              Registrar\r\n                            </button>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  onClick={() => setMostrarRegistroChapter(true)}\r\n                  type=\"button\"\r\n                  className=\"border border-indigo-500 bg-indigo-500 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-indigo-600 focus:outline-none focus:shadow-outline\"\r\n                >\r\n                  Nuevo Capitulo\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    setChapter(initialChapter);\r\n                    closeModalCapitulos();\r\n                  }}\r\n                  type=\"button\"\r\n                  className=\"text-dark rounded-md px-4 py-2 m-2  select-none focus:outline-none focus:shadow-outline\"\r\n                >\r\n                  Salir\r\n                </button>\r\n                <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n                  <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n                    <table className=\"min-w-full leading-normal\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Nombre\r\n                          </th>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Temporada\r\n                          </th>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Duración\r\n                          </th>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Web\r\n                          </th>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Server\r\n                          </th>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Estado\r\n                          </th>\r\n                          <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Acciones\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {\r\n                          // eslint-disable-next-line array-callback-return\r\n                          chapters.map((chapter) => (\r\n                            <ChapterItem\r\n                              key={chapter._id}\r\n                              chapter={chapter}\r\n                              getListChapters={getListChapters} //seasons={getLis}\r\n                              setMostrarRegistroChapter={\r\n                                setMostrarRegistroChapter\r\n                              }\r\n                              getChapterId={getChapterId}\r\n                              //openModalCapitulos={openModalCapitulos}\r\n                            />\r\n                          ))\r\n                        }\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </Modal>\r\n        </div>\r\n        <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n          <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n            <table className=\"min-w-full leading-normal\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Nombre\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Origen\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Año\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Genero\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Creado\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Estado\r\n                  </th>\r\n                  <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Acciones\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  // eslint-disable-next-line array-callback-return\r\n                  series.map((serie) => (\r\n                    <SerieItem\r\n                      key={serie._id}\r\n                      serie={serie}\r\n                      series={getListSeries}\r\n                      modal={opeMondalId}\r\n                      openModalTemporadas={openModalTemporadas}\r\n                      getListSeason={getListSeason}\r\n                    />\r\n                  ))\r\n                }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Serie\\SerieService.js",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Serie\\SerieItem.jsx",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Serie\\SeasonItem.jsx",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Serie\\ChapterItem.jsx",[],"C:\\Users\\KEINER\\Desktop\\PROYECTOS\\proyecto-ethan\\frontend\\src\\components\\Video\\VideoService.js",[],{"ruleId":"191","severity":1,"message":"192","line":8,"column":3,"nodeType":"193","messageId":"194","endLine":8,"endColumn":14},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"191","severity":1,"message":"199","line":29,"column":9,"nodeType":"193","messageId":"194","endLine":29,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":61,"column":6,"nodeType":"202","endLine":61,"endColumn":8,"suggestions":"203"},{"ruleId":"195","replacedBy":"204"},{"ruleId":"197","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":34,"column":17,"nodeType":"208","endLine":42,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":52,"column":17,"nodeType":"208","endLine":60,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":72,"column":21,"nodeType":"208","endLine":80,"endColumn":22},{"ruleId":"206","severity":1,"message":"207","line":90,"column":21,"nodeType":"208","endLine":98,"endColumn":22},{"ruleId":"206","severity":1,"message":"207","line":114,"column":17,"nodeType":"208","endLine":120,"endColumn":18},{"ruleId":"191","severity":1,"message":"209","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"210","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":19},{"ruleId":"191","severity":1,"message":"211","line":6,"column":10,"nodeType":"193","messageId":"194","endLine":6,"endColumn":25},{"ruleId":"195","replacedBy":"212"},{"ruleId":"197","replacedBy":"213"},{"ruleId":"200","severity":1,"message":"214","line":64,"column":6,"nodeType":"202","endLine":64,"endColumn":16,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":9,"column":41,"nodeType":"218","endLine":9,"endColumn":56},{"ruleId":"219","severity":1,"message":"220","line":17,"column":9,"nodeType":"208","endLine":17,"endColumn":49},{"ruleId":"195","replacedBy":"221"},{"ruleId":"197","replacedBy":"222"},{"ruleId":"195","replacedBy":"223"},{"ruleId":"197","replacedBy":"224"},{"ruleId":"191","severity":1,"message":"225","line":8,"column":9,"nodeType":"193","messageId":"194","endLine":8,"endColumn":18},{"ruleId":"195","replacedBy":"226"},{"ruleId":"197","replacedBy":"227"},{"ruleId":"191","severity":1,"message":"228","line":4,"column":7,"nodeType":"193","messageId":"194","endLine":4,"endColumn":19},{"ruleId":"191","severity":1,"message":"229","line":57,"column":17,"nodeType":"193","messageId":"194","endLine":57,"endColumn":24},{"ruleId":"191","severity":1,"message":"230","line":3,"column":13,"nodeType":"193","messageId":"194","endLine":3,"endColumn":24},{"ruleId":"200","severity":1,"message":"231","line":53,"column":6,"nodeType":"202","endLine":53,"endColumn":8,"suggestions":"232"},{"ruleId":"195","replacedBy":"233"},{"ruleId":"197","replacedBy":"234"},{"ruleId":"191","severity":1,"message":"235","line":1,"column":38,"nodeType":"193","messageId":"194","endLine":1,"endColumn":48},{"ruleId":"191","severity":1,"message":"236","line":10,"column":3,"nodeType":"193","messageId":"194","endLine":10,"endColumn":12},{"ruleId":"191","severity":1,"message":"237","line":11,"column":3,"nodeType":"193","messageId":"194","endLine":11,"endColumn":13},{"ruleId":"191","severity":1,"message":"238","line":12,"column":3,"nodeType":"193","messageId":"194","endLine":12,"endColumn":15},{"ruleId":"191","severity":1,"message":"239","line":13,"column":3,"nodeType":"193","messageId":"194","endLine":13,"endColumn":16},{"ruleId":"191","severity":1,"message":"240","line":16,"column":10,"nodeType":"193","messageId":"194","endLine":16,"endColumn":21},{"ruleId":"191","severity":1,"message":"241","line":23,"column":10,"nodeType":"193","messageId":"194","endLine":23,"endColumn":23},{"ruleId":"191","severity":1,"message":"242","line":70,"column":10,"nodeType":"193","messageId":"194","endLine":70,"endColumn":13},{"ruleId":"191","severity":1,"message":"243","line":70,"column":15,"nodeType":"193","messageId":"194","endLine":70,"endColumn":21},{"ruleId":"200","severity":1,"message":"244","line":342,"column":6,"nodeType":"202","endLine":342,"endColumn":26,"suggestions":"245"},{"ruleId":"191","severity":1,"message":"235","line":1,"column":38,"nodeType":"193","messageId":"194","endLine":1,"endColumn":48},{"ruleId":"191","severity":1,"message":"240","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":21},{"ruleId":"191","severity":1,"message":"241","line":12,"column":10,"nodeType":"193","messageId":"194","endLine":12,"endColumn":23},{"ruleId":"200","severity":1,"message":"246","line":602,"column":6,"nodeType":"202","endLine":602,"endColumn":51,"suggestions":"247"},"no-unused-vars","'deleteToken' is defined but never used.","Identifier","unusedVar","no-native-reassign",["248"],"no-negated-in-lhs",["249"],"'verifyLogin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cargaUsuario'. Either include it or remove the dependency array.","ArrayExpression",["250"],["248"],["249"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'LoginForm' is defined but never used.","'useBeforeunload' is defined but never used.",["248"],["249"],"React Hook useEffect has a missing dependency: 'calcularCantidad'. Either include it or remove the dependency array.",["251"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["248"],["249"],["248"],["249"],"'className' is assigned a value but never used.",["248"],["249"],"'API_COUNTRYS' is assigned a value but never used.","'setData' is assigned a value but never used.","'userService' is defined but never used.","React Hook useEffect has a missing dependency: 'calculaDiferenciaDias'. Either include it or remove the dependency array.",["252"],["248"],["249"],"'useContext' is defined but never used.","'newSeason' is defined but never used.","'newChapter' is defined but never used.","'updateSeason' is defined but never used.","'updateChapter' is defined but never used.","'FiArrowLeft' is defined but never used.","'StatusContext' is defined but never used.","'URL' is assigned a value but never used.","'setURL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'video'. Either include it or remove the dependency array. You can also do a functional update 'setVideo(v => ...)' if you only need 'video' in the 'setVideo' call.",["253"],"React Hook useEffect has missing dependencies: 'chapter' and 'serie.genres'. Either include them or remove the dependency array. You can also do a functional update 'setChapter(c => ...)' if you only need 'chapter' in the 'setChapter' call.",["254"],"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [cargaUsuario]",{"range":"265","text":"266"},"Update the dependencies array to be: [calcularCantidad, data.ide]",{"range":"267","text":"268"},"Update the dependencies array to be: [calculaDiferenciaDias]",{"range":"269","text":"270"},"Update the dependencies array to be: [loading, video, video._id]",{"range":"271","text":"272"},"Update the dependencies array to be: [loading, serie._id, season._id, chapter._id, chapter, serie.genres]",{"range":"273","text":"274"},[1635,1637],"[cargaUsuario]",[2422,2432],"[calcularCantidad, data.ide]",[1532,1534],"[calculaDiferenciaDias]",[9587,9607],"[loading, video, video._id]",[16610,16655],"[loading, serie._id, season._id, chapter._id, chapter, serie.genres]"]